function error = snm_1_1_rev3_reduced_fitness_Anseth(w,exptin,exptout,method) 
% Generated by Netflux 0.08a on 11.04.2019
% 11.17.2019 JR: modified SE to reflect errors in delta(Activity) from
% basal conditions to stimuli
% 
% for testing:
% rng('default');
% w = rand(1,158);
 
% species parameters 
speciesNames = {'AngII','AT1R','AGT','ACE','NOX','ROS','ET1','ETAR','DAG','PKC','NE','BAR','Forskolin','AC','cAMP','PKA','CREB','CBP','TGFB','TGFB1R','smad3','smad7','latentTGFB','BAMBI','PDGF','PDGFR','NP','tension','B1int','Rho','ROCK','NFAT','IL6','STAT','IL1','IL1RI','TNFa','TNFaR','NFKB','PI3K','Akt','p38','TRAF','ASK1','PP1','JNK','abl','Rac1','MEKK1','MKK4','ERK','Ras','MEK1','FAK','epac','Factin','FA','CTGF','proliferation','SRF','EDAFN','aSMA','AP1','TIMP1','TIMP2','PAI1','proMMP14','proMMP1','proMMP2','proMMP9','fibronectin','periostin','proCI','proCIII','B3int','Src','p130Cas','YAP','MRTF','Gactin','TNC','mTORC1','mTORC2','p70S6K','syndecan4','proMMP3','proMMP8','proMMP12','thrombospondin4','osteopontin','contractility','RhoGEF','RhoGDI','talin','vinculin','paxillin','MLC',}; 
tau = [1, 1.000000e-01, 10, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1, 1.000000e-01, 1, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1, 1.000000e-01, 1.000000e-01, 10, 10, 1.000000e-01, 1, 1.000000e-01, 1, 1, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1, 1.000000e-01, 1, 1.000000e-01, 1, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1, 1, 1.000000e-01, 10, 1.000000e-01, 10, 10, 1.000000e-01, 10, 10, 10, 1, 1, 1, 1, 10, 10, 10, 10, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1, 10, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1, 1, 1, 10, 10, 10, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, 1.000000e-01, ]; 
ymax = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5.000000e-01, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5.000000e-01, 5.000000e-01, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ];
 
% reaction parameters 
% w = [2.500000e-01, 2.500000e-01, 2.500000e-01, 2.500000e-01, 2.500000e-01, 2.500000e-01, 2.500000e-01, 2.500000e-01, 2.500000e-01, 2.500000e-01, 2.500000e-01, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ]; 
n = [1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, 1.400000e+00, ]; 
EC50 = [6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, 6.000000e-01, ]; 
rpar = [w;n;EC50];
params = {rpar,tau,ymax,speciesNames};
y0 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ]; 
options = [];

% loop parameters
% 12.16.2019: setting input/output params using Anseth NTM dataset
species_stim = [5 6 10];             % measured inputs (from SOMAscan)
% dose_stim = cat(2,repmat([ld hd],1,2),hd,repmat([ld hd],1,4));   % from fcn args
load(exptin,'expt_in');
outputs = [23 58 62 64 65 66 67 68 69 71 72 73 74 81 90];     % matching reduced model output indices

% simulate basal conditions
% tspan = [0 40]; 
% disp('Running basal simulation')
% [~,y1] = ode23(@ODEfun,tspan,y0,options,params);
% save SS output levels to 'y_out'
% y_out = real(y1(end,outputs));

% simulate stimuli: loop through all conditions
for stimulus = 1:size(expt_in,1)
%     create 'w_stim' variable: set to w, then specific values modified
    w_stim = w;
    for species = 1:length(species_stim)
        w_stim(species_stim(species)) = expt_in(stimulus,species);
    end
%     integrate w_stim into params
    rpar_stim = [w_stim;n;EC50];
    params_stim = {rpar_stim,tau,ymax,speciesNames};
%     run simulation for new timestep
    tspan = [0 40]; 
    [~,y2] = ode23(@ODEfun,tspan,y0,options,params_stim);
%     append output levels to 'y_out'
    if stimulus == 1
        y_out = real(y2(end,outputs));
    else
        y_out = cat(1,y_out,real(y2(end,outputs)));
    end
end

% calculate fitness metric: MSE
% 11.17.2019: changed metric to reflect delta(Activity)
% 12.09.2019: changed metric to bin delta(Activity) levels

% import normalized output data: 'expt_out'
load(exptout,'expt_out');    %from dataprocessing.m

% 11.17.2019 JR: calculate delta(Activity)
% 12.16.2019 JR: calculate for each patient:
% delta(Activity) = post-TAVR (rows 1:8) - pre-TAVR (rows 9:16)
delta_act = @(n) n(1:8,:) - n(9:16,:);
y_delta = delta_act(y_out);
expt_delta = delta_act(expt_out);

% 12.09.2019 JR: bin delta(Activity) levels depending on 'method' arg
if nargin < 4
    method = 'MSE';
end

if strcmpi(method,'bins') == 1
    % initialize bin arrays (for y/expt)
    y_bins = zeros(size(y_delta)); expt_bins = zeros(size(expt_delta));
    % define bin0: between -0.05/0.05 (by default)
    % define bin1: between -0.25/0.25
    bin1neg = @(n) n < -0.025 & n >= -0.125; bin1pos = @(n) n > 0.025 & n <= 0.125;
    % define bin2: <-0.25 or >0.25
    bin2neg = @(n) n < -0.125; bin2pos = @(n) n > 0.125;
    % assign values to bin arrays
    y_bins(bin1neg(y_delta)) = -1;  expt_bins(bin1neg(expt_delta)) = -1;
    y_bins(bin1pos(y_delta)) = 1;   expt_bins(bin1pos(expt_delta)) = 1;
    y_bins(bin2neg(y_delta)) = -2;  expt_bins(bin2neg(expt_delta)) = -2;
    y_bins(bin2pos(y_delta)) = 2;   expt_bins(bin2pos(expt_delta)) = 2;
    % calculate error rate:
    % error rate = # incorrect (total - correct) / total
    bins_correct = y_bins == expt_bins;
    bins_error = (numel(y_bins) - sum(bins_correct,'all')) / numel(y_bins);
    error = bins_error;
    
else
    % calculate squared error for elements
    SE = (y_delta - expt_delta).^2;
    % average across all elements
    MSE = mean(mean(SE));
    % assign method to fitness fcn output
    error = MSE;
end
 
function dydt=ODEfun(t,y,params) 
% Assign names for parameters 
[rpar,tau,ymax,speciesNames]=params{:}; 
AngII = 1; 
AT1R = 2; 
AGT = 3; 
ACE = 4; 
NOX = 5; 
ROS = 6; 
ET1 = 7; 
ETAR = 8; 
DAG = 9; 
PKC = 10; 
NE = 11; 
BAR = 12; 
Forskolin = 13; 
AC = 14; 
cAMP = 15; 
PKA = 16; 
CREB = 17; 
CBP = 18; 
TGFB = 19; 
TGFB1R = 20; 
smad3 = 21; 
smad7 = 22; 
latentTGFB = 23; 
BAMBI = 24; 
PDGF = 25; 
PDGFR = 26; 
NP = 27; 
tension = 28; 
B1int = 29; 
Rho = 30; 
ROCK = 31; 
NFAT = 32; 
IL6 = 33; 
STAT = 34; 
IL1 = 35; 
IL1RI = 36; 
TNFa = 37; 
TNFaR = 38; 
NFKB = 39; 
PI3K = 40; 
Akt = 41; 
p38 = 42; 
TRAF = 43; 
ASK1 = 44; 
PP1 = 45; 
JNK = 46; 
abl = 47; 
Rac1 = 48; 
MEKK1 = 49; 
MKK4 = 50; 
ERK = 51; 
Ras = 52; 
MEK1 = 53; 
FAK = 54; 
epac = 55; 
Factin = 56; 
FA = 57; 
CTGF = 58; 
proliferation = 59; 
SRF = 60; 
EDAFN = 61; 
aSMA = 62; 
AP1 = 63; 
TIMP1 = 64; 
TIMP2 = 65; 
PAI1 = 66; 
proMMP14 = 67; 
proMMP1 = 68; 
proMMP2 = 69; 
proMMP9 = 70; 
fibronectin = 71; 
periostin = 72; 
proCI = 73; 
proCIII = 74; 
B3int = 75; 
Src = 76; 
p130Cas = 77; 
YAP = 78; 
MRTF = 79; 
Gactin = 80; 
TNC = 81; 
mTORC1 = 82; 
mTORC2 = 83; 
p70S6K = 84; 
syndecan4 = 85; 
proMMP3 = 86; 
proMMP8 = 87; 
proMMP12 = 88; 
thrombospondin4 = 89; 
osteopontin = 90; 
contractility = 91; 
RhoGEF = 92; 
RhoGDI = 93; 
talin = 94; 
vinculin = 95; 
paxillin = 96; 
MLC = 97; 
dydt = zeros(97,1); 
dydt(AngII) = (OR(rpar(1,1),AND(rpar(:,14),act(y(AGT),rpar(:,14)),act(y(ACE),rpar(:,14))))*ymax(AngII) - y(AngII))/tau(AngII); 
dydt(AT1R) = (act(y(AngII),rpar(:,19))*ymax(AT1R) - y(AT1R))/tau(AT1R); 
dydt(AGT) = (AND(rpar(:,28),inhib(y(AT1R),rpar(:,28)),act(y(p38),rpar(:,28)),inhib(y(JNK),rpar(:,28)))*ymax(AGT) - y(AGT))/tau(AGT); 
dydt(ACE) = (act(y(TGFB1R),rpar(:,51))*ymax(ACE) - y(ACE))/tau(ACE); 
dydt(NOX) = (OR(act(y(AT1R),rpar(:,20)),act(y(TGFB1R),rpar(:,94)))*ymax(NOX) - y(NOX))/tau(NOX); 
dydt(ROS) = (OR(act(y(NOX),rpar(:,21)),act(y(ETAR),rpar(:,38)))*ymax(ROS) - y(ROS))/tau(ROS); 
dydt(ET1) = (OR(rpar(1,9),act(y(AP1),rpar(:,18)))*ymax(ET1) - y(ET1))/tau(ET1); 
dydt(ETAR) = (act(y(ET1),rpar(:,57))*ymax(ETAR) - y(ETAR))/tau(ETAR); 
dydt(DAG) = (OR(act(y(ETAR),rpar(:,110)),act(y(AT1R),rpar(:,111)))*ymax(DAG) - y(DAG))/tau(DAG); 
dydt(PKC) = (OR(act(y(syndecan4),rpar(:,126)),AND(rpar(:,141),act(y(DAG),rpar(:,141)),act(y(mTORC2),rpar(:,141))))*ymax(PKC) - y(PKC))/tau(PKC); 
dydt(NE) = (rpar(1,7)*ymax(NE) - y(NE))/tau(NE); 
dydt(BAR) = (act(y(NE),rpar(:,56))*ymax(BAR) - y(BAR))/tau(BAR); 
dydt(Forskolin) = (rpar(1,11)*ymax(Forskolin) - y(Forskolin))/tau(Forskolin); 
dydt(AC) = (OR(act(y(BAR),rpar(:,65)),OR(AND(rpar(:,66),act(y(AT1R),rpar(:,66)),act(y(BAR),rpar(:,66))),act(y(Forskolin),rpar(:,99))))*ymax(AC) - y(AC))/tau(AC); 
dydt(cAMP) = (act(y(AC),rpar(:,67))*ymax(cAMP) - y(cAMP))/tau(cAMP); 
dydt(PKA) = (act(y(cAMP),rpar(:,45))*ymax(PKA) - y(PKA))/tau(PKA); 
dydt(CREB) = (act(y(PKA),rpar(:,54))*ymax(CREB) - y(CREB))/tau(CREB); 
dydt(CBP) = (OR(inhib(y(smad3),rpar(:,47)),inhib(y(CREB),rpar(:,48)))*ymax(CBP) - y(CBP))/tau(CBP); 
dydt(TGFB) = (OR(rpar(1,2),OR(AND(rpar(:,12),act(y(latentTGFB),rpar(:,12)),act(y(proMMP9),rpar(:,12))),AND(rpar(:,13),act(y(latentTGFB),rpar(:,13)),act(y(proMMP2),rpar(:,13)))))*ymax(TGFB) - y(TGFB))/tau(TGFB); 
dydt(TGFB1R) = (AND(rpar(:,52),act(y(TGFB),rpar(:,52)),inhib(y(BAMBI),rpar(:,52)))*ymax(TGFB1R) - y(TGFB1R))/tau(TGFB1R); 
dydt(smad3) = (OR(AND(rpar(:,29),act(y(TGFB1R),rpar(:,29)),inhib(y(smad7),rpar(:,29)),inhib(y(NP),rpar(:,29))),act(y(Akt),rpar(:,136)))*ymax(smad3) - y(smad3))/tau(smad3); 
dydt(smad7) = (OR(act(y(STAT),rpar(:,100)),AND(rpar(:,150),act(y(AP1),rpar(:,150)),inhib(y(YAP),rpar(:,150))))*ymax(smad7) - y(smad7))/tau(smad7); 
dydt(latentTGFB) = (act(y(AP1),rpar(:,69))*ymax(latentTGFB) - y(latentTGFB))/tau(latentTGFB); 
dydt(BAMBI) = (AND(rpar(:,98),act(y(TGFB),rpar(:,98)),act(y(IL1RI),rpar(:,98)))*ymax(BAMBI) - y(BAMBI))/tau(BAMBI); 
dydt(PDGF) = (rpar(1,8)*ymax(PDGF) - y(PDGF))/tau(PDGF); 
dydt(PDGFR) = (act(y(PDGF),rpar(:,64))*ymax(PDGFR) - y(PDGFR))/tau(PDGFR); 
dydt(NP) = (rpar(1,10)*ymax(NP) - y(NP))/tau(NP); 
dydt(tension) = (OR(rpar(1,3),AND(rpar(:,157),act(y(FA),rpar(:,157)),act(y(contractility),rpar(:,157))))*ymax(tension) - y(tension))/tau(tension); 
dydt(B1int) = (OR(AND(rpar(:,44),act(y(PKC),rpar(:,44)),act(y(tension),rpar(:,44))),act(y(tension),rpar(:,49)))*ymax(B1int) - y(B1int))/tau(B1int); 
dydt(Rho) = (OR(act(y(TGFB1R),rpar(:,112)),AND(rpar(:,124),act(y(RhoGEF),rpar(:,124)),inhib(y(RhoGDI),rpar(:,124))))*ymax(Rho) - y(Rho))/tau(Rho); 
dydt(ROCK) = (act(y(Rho),rpar(:,71))*ymax(ROCK) - y(ROCK))/tau(ROCK); 
dydt(NFAT) = (act(y(DAG),rpar(:,106))*ymax(NFAT) - y(NFAT))/tau(NFAT); 
dydt(IL6) = (OR(rpar(1,4),OR(AND(rpar(:,15),act(y(CREB),rpar(:,15)),act(y(CBP),rpar(:,15))),OR(act(y(NFKB),rpar(:,16)),act(y(AP1),rpar(:,17)))))*ymax(IL6) - y(IL6))/tau(IL6); 
dydt(STAT) = (act(y(IL6),rpar(:,22))*ymax(STAT) - y(STAT))/tau(STAT); 
dydt(IL1) = (rpar(1,5)*ymax(IL1) - y(IL1))/tau(IL1); 
dydt(IL1RI) = (act(y(IL1),rpar(:,59))*ymax(IL1RI) - y(IL1RI))/tau(IL1RI); 
dydt(TNFa) = (rpar(1,6)*ymax(TNFa) - y(TNFa))/tau(TNFa); 
dydt(TNFaR) = (act(y(TNFa),rpar(:,72))*ymax(TNFaR) - y(TNFaR))/tau(TNFaR); 
dydt(NFKB) = (OR(act(y(IL1RI),rpar(:,26)),OR(act(y(ERK),rpar(:,35)),OR(act(y(p38),rpar(:,36)),act(y(Akt),rpar(:,95)))))*ymax(NFKB) - y(NFKB))/tau(NFKB); 
dydt(PI3K) = (OR(act(y(TNFaR),rpar(:,27)),OR(act(y(TGFB1R),rpar(:,91)),OR(act(y(PDGFR),rpar(:,92)),act(y(FAK),rpar(:,93)))))*ymax(PI3K) - y(PI3K))/tau(PI3K); 
dydt(Akt) = (AND(rpar(:,140),act(y(PI3K),rpar(:,140)),act(y(mTORC2),rpar(:,140)))*ymax(Akt) - y(Akt))/tau(Akt); 
dydt(p38) = (OR(act(y(ROS),rpar(:,24)),OR(act(y(ASK1),rpar(:,76)),OR(act(y(Ras),rpar(:,90)),AND(rpar(:,102),act(y(Rho),rpar(:,102)),inhib(y(Rac1),rpar(:,102))))))*ymax(p38) - y(p38))/tau(p38); 
dydt(TRAF) = (OR(act(y(TGFB1R),rpar(:,77)),act(y(TNFaR),rpar(:,84)))*ymax(TRAF) - y(TRAF))/tau(TRAF); 
dydt(ASK1) = (OR(act(y(TRAF),rpar(:,85)),act(y(IL1RI),rpar(:,87)))*ymax(ASK1) - y(ASK1))/tau(ASK1); 
dydt(PP1) = (act(y(p38),rpar(:,75))*ymax(PP1) - y(PP1))/tau(PP1); 
dydt(JNK) = (OR(act(y(ROS),rpar(:,25)),OR(AND(rpar(:,80),inhib(y(NFKB),rpar(:,80)),act(y(MKK4),rpar(:,80))),AND(rpar(:,103),inhib(y(Rho),rpar(:,103)),act(y(MKK4),rpar(:,103)))))*ymax(JNK) - y(JNK))/tau(JNK); 
dydt(abl) = (act(y(PDGFR),rpar(:,81))*ymax(abl) - y(abl))/tau(abl); 
dydt(Rac1) = (OR(act(y(abl),rpar(:,82)),AND(rpar(:,121),act(y(abl),rpar(:,121)),act(y(p130Cas),rpar(:,121))))*ymax(Rac1) - y(Rac1))/tau(Rac1); 
dydt(MEKK1) = (OR(act(y(FAK),rpar(:,68)),act(y(Rac1),rpar(:,78)))*ymax(MEKK1) - y(MEKK1))/tau(MEKK1); 
dydt(MKK4) = (OR(act(y(MEKK1),rpar(:,79)),act(y(ASK1),rpar(:,86)))*ymax(MKK4) - y(MKK4))/tau(MKK4); 
dydt(ERK) = (OR(act(y(ROS),rpar(:,23)),AND(rpar(:,74),inhib(y(PP1),rpar(:,74)),act(y(MEK1),rpar(:,74))))*ymax(ERK) - y(ERK))/tau(ERK); 
dydt(Ras) = (OR(act(y(AT1R),rpar(:,107)),AND(rpar(:,115),act(y(FAK),rpar(:,115)),act(y(Src),rpar(:,115))))*ymax(Ras) - y(Ras))/tau(Ras); 
dydt(MEK1) = (AND(rpar(:,73),inhib(y(ERK),rpar(:,73)),act(y(Ras),rpar(:,73)))*ymax(MEK1) - y(MEK1))/tau(MEK1); 
dydt(FAK) = (act(y(B1int),rpar(:,114))*ymax(FAK) - y(FAK))/tau(FAK); 
dydt(epac) = (act(y(cAMP),rpar(:,70))*ymax(epac) - y(epac))/tau(epac); 
dydt(Factin) = (AND(rpar(:,129),act(y(ROCK),rpar(:,129)),act(y(Gactin),rpar(:,129)))*ymax(Factin) - y(Factin))/tau(Factin); 
dydt(FA) = (AND(rpar(:,152),act(y(vinculin),rpar(:,152)),inhib(y(paxillin),rpar(:,152)))*ymax(FA) - y(FA))/tau(FA); 
dydt(CTGF) = (OR(AND(rpar(:,30),act(y(CBP),rpar(:,30)),act(y(smad3),rpar(:,30)),act(y(ERK),rpar(:,30))),act(y(YAP),rpar(:,125)))*ymax(CTGF) - y(CTGF))/tau(CTGF); 
dydt(proliferation) = (OR(act(y(AP1),rpar(:,53)),OR(act(y(CREB),rpar(:,55)),OR(act(y(CTGF),rpar(:,58)),OR(act(y(PKC),rpar(:,60)),OR(act(y(JNK),rpar(:,83)),act(y(p70S6K),rpar(:,135)))))))*ymax(proliferation) - y(proliferation))/tau(proliferation); 
dydt(SRF) = (act(y(MRTF),rpar(:,131))*ymax(SRF) - y(SRF))/tau(SRF); 
dydt(EDAFN) = (act(y(NFAT),rpar(:,50))*ymax(EDAFN) - y(EDAFN))/tau(EDAFN); 
dydt(aSMA) = (OR(AND(rpar(:,105),act(y(CBP),rpar(:,105)),act(y(smad3),rpar(:,105)),act(y(SRF),rpar(:,105))),OR(AND(rpar(:,108),act(y(CBP),rpar(:,108)),act(y(smad3),rpar(:,108))),act(y(SRF),rpar(:,109))))*ymax(aSMA) - y(aSMA))/tau(aSMA); 
dydt(AP1) = (OR(act(y(ERK),rpar(:,39)),act(y(JNK),rpar(:,97)))*ymax(AP1) - y(AP1))/tau(AP1); 
dydt(TIMP1) = (act(y(AP1),rpar(:,42))*ymax(TIMP1) - y(TIMP1))/tau(TIMP1); 
dydt(TIMP2) = (act(y(AP1),rpar(:,43))*ymax(TIMP2) - y(TIMP2))/tau(TIMP2); 
dydt(PAI1) = (OR(act(y(smad3),rpar(:,88)),act(y(YAP),rpar(:,142)))*ymax(PAI1) - y(PAI1))/tau(PAI1); 
dydt(proMMP14) = (OR(act(y(AP1),rpar(:,63)),act(y(NFKB),rpar(:,89)))*ymax(proMMP14) - y(proMMP14))/tau(proMMP14); 
dydt(proMMP1) = (AND(rpar(:,37),inhib(y(smad3),rpar(:,37)),act(y(NFKB),rpar(:,37)),act(y(AP1),rpar(:,37)))*ymax(proMMP1) - y(proMMP1))/tau(proMMP1); 
dydt(proMMP2) = (OR(act(y(STAT),rpar(:,31)),act(y(AP1),rpar(:,40)))*ymax(proMMP2) - y(proMMP2))/tau(proMMP2); 
dydt(proMMP9) = (OR(act(y(STAT),rpar(:,32)),AND(rpar(:,41),act(y(NFKB),rpar(:,41)),act(y(AP1),rpar(:,41))))*ymax(proMMP9) - y(proMMP9))/tau(proMMP9); 
dydt(fibronectin) = (OR(AND(rpar(:,46),act(y(CBP),rpar(:,46)),act(y(smad3),rpar(:,46))),act(y(NFKB),rpar(:,96)))*ymax(fibronectin) - y(fibronectin))/tau(fibronectin); 
dydt(periostin) = (OR(AND(rpar(:,33),act(y(CBP),rpar(:,33)),act(y(smad3),rpar(:,33))),AND(rpar(:,34),act(y(CREB),rpar(:,34)),act(y(CBP),rpar(:,34))))*ymax(periostin) - y(periostin))/tau(periostin); 
dydt(proCI) = (OR(AND(rpar(:,61),act(y(CBP),rpar(:,61)),act(y(smad3),rpar(:,61)),inhib(y(epac),rpar(:,61))),act(y(SRF),rpar(:,101)))*ymax(proCI) - y(proCI))/tau(proCI); 
dydt(proCIII) = (OR(AND(rpar(:,62),act(y(CBP),rpar(:,62)),act(y(smad3),rpar(:,62)),inhib(y(epac),rpar(:,62))),act(y(SRF),rpar(:,104)))*ymax(proCIII) - y(proCIII))/tau(proCIII); 
dydt(B3int) = (OR(AND(rpar(:,144),act(y(tension),rpar(:,144)),inhib(y(thrombospondin4),rpar(:,144))),act(y(osteopontin),rpar(:,148)))*ymax(B3int) - y(B3int))/tau(B3int); 
dydt(Src) = (OR(act(y(B3int),rpar(:,113)),act(y(PDGFR),rpar(:,119)))*ymax(Src) - y(Src))/tau(Src); 
dydt(p130Cas) = (OR(AND(rpar(:,118),act(y(FAK),rpar(:,118)),act(y(Src),rpar(:,118))),AND(rpar(:,120),act(y(tension),rpar(:,120)),act(y(Src),rpar(:,120))))*ymax(p130Cas) - y(p130Cas))/tau(p130Cas); 
dydt(YAP) = (act(y(Factin),rpar(:,122))*ymax(YAP) - y(YAP))/tau(YAP); 
dydt(MRTF) = (inhib(y(Gactin),rpar(:,128))*ymax(MRTF) - y(MRTF))/tau(MRTF); 
dydt(Gactin) = (inhib(y(Factin),rpar(:,130))*ymax(Gactin) - y(Gactin))/tau(Gactin); 
dydt(TNC) = (OR(act(y(NFKB),rpar(:,137)),act(y(MRTF),rpar(:,138)))*ymax(TNC) - y(TNC))/tau(TNC); 
dydt(mTORC1) = (act(y(Akt),rpar(:,133))*ymax(mTORC1) - y(mTORC1))/tau(mTORC1); 
dydt(mTORC2) = (inhib(y(p70S6K),rpar(:,139))*ymax(mTORC2) - y(mTORC2))/tau(mTORC2); 
dydt(p70S6K) = (act(y(mTORC1),rpar(:,134))*ymax(p70S6K) - y(p70S6K))/tau(p70S6K); 
dydt(syndecan4) = (AND(rpar(:,132),act(y(tension),rpar(:,132)),inhib(y(TNC),rpar(:,132)))*ymax(syndecan4) - y(syndecan4))/tau(syndecan4); 
dydt(proMMP3) = (AND(rpar(:,146),inhib(y(smad3),rpar(:,146)),act(y(NFKB),rpar(:,146)),act(y(AP1),rpar(:,146)))*ymax(proMMP3) - y(proMMP3))/tau(proMMP3); 
dydt(proMMP8) = (AND(rpar(:,145),inhib(y(smad3),rpar(:,145)),act(y(NFKB),rpar(:,145)),act(y(AP1),rpar(:,145)))*ymax(proMMP8) - y(proMMP8))/tau(proMMP8); 
dydt(proMMP12) = (act(y(CREB),rpar(:,149))*ymax(proMMP12) - y(proMMP12))/tau(proMMP12); 
dydt(thrombospondin4) = (act(y(smad3),rpar(:,143))*ymax(thrombospondin4) - y(thrombospondin4))/tau(thrombospondin4); 
dydt(osteopontin) = (act(y(AP1),rpar(:,147))*ymax(osteopontin) - y(osteopontin))/tau(osteopontin); 
dydt(contractility) = (AND(rpar(:,156),act(y(Factin),rpar(:,156)),act(y(vinculin),rpar(:,156)),act(y(MLC),rpar(:,156)))*ymax(contractility) - y(contractility))/tau(contractility); 
dydt(RhoGEF) = (AND(rpar(:,116),act(y(FAK),rpar(:,116)),act(y(Src),rpar(:,116)))*ymax(RhoGEF) - y(RhoGEF))/tau(RhoGEF); 
dydt(RhoGDI) = (OR(inhib(y(Src),rpar(:,117)),OR(act(y(PKA),rpar(:,123)),inhib(y(PKC),rpar(:,127))))*ymax(RhoGDI) - y(RhoGDI))/tau(RhoGDI); 
dydt(talin) = (OR(act(y(B1int),rpar(:,153)),act(y(B3int),rpar(:,154)))*ymax(talin) - y(talin))/tau(talin); 
dydt(vinculin) = (AND(rpar(:,155),act(y(tension),rpar(:,155)),act(y(talin),rpar(:,155)))*ymax(vinculin) - y(vinculin))/tau(vinculin); 
dydt(paxillin) = (AND(rpar(:,151),act(y(FAK),rpar(:,151)),act(y(Src),rpar(:,151)),act(y(MLC),rpar(:,151)))*ymax(paxillin) - y(paxillin))/tau(paxillin); 
dydt(MLC) = (act(y(ROCK),rpar(:,158))*ymax(MLC) - y(MLC))/tau(MLC); 

% utility functions 
function fact = act(x,rpar) 
% hill activation function with parameters w (weight), n (Hill coeff), EC50 
    w = rpar(1); 
    n = rpar(2); 
    EC50 = rpar(3); 
    beta = (EC50.^n - 1)./(2*EC50.^n - 1); 
    K = (beta - 1).^(1./n); 
    fact = w.*(beta.*x.^n)./(K.^n + x.^n); 
    if fact>w,                 % cap fact(x)<= 1 
        fact = w; 
    end
 
function finhib = inhib(x,rpar) 
% inverse hill function with parameters w (weight), n (Hill coeff), EC50 
    finhib = rpar(1) - act(x,rpar);
 
function z = OR(x,y) 
% OR logic gate 
    z = x + y - x*y;
 
function z = AND(rpar,varargin) 
% AND logic gate, multiplying all of the reactants together 
    w = rpar(1); 
    if w == 0, 
        z = 0; 
    else 
        v = cell2mat(varargin); 
        z = prod(v)/w^(nargin-2);  
    end 
